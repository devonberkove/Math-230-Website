outfielders <- soccer_data[soccer_data$Position != "GK", ]
outfielders <- outfielders[outfielders$Goals >= 1, ]
outfielders$Position <- factor(outfielders$Position)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Position(s)") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
pens_df <- data.frame(Pens = sapply(teams, function(team) sum(team$Penalty_Attempted)), Pens_Scored = sapply(teams, function(team) sum(team$Penalty_Goals)), Goals = sapply(teams, function(team) sum(team$Goals)), Names = names(teams))
pens_df$Convert_Rate = pens_df$Pens_Scored/pens_df$Pens
plot <- ggplot(pens_df, aes(x = Pens_Scored, y = Goals, size = Convert_Rate,
text = paste("Team:", Names,
"<br>Total Season Goals:", Goals,
"<br>Penalties Attempted:", Pens,
"<br>Penalties Scored:", Pens_Scored))) +
geom_point(color = team_colors, alpha = 0.7) +
scale_size_continuous(range = c(3,7)) +
theme_minimal() +
labs(title = "Total Goals vs. Season Goals by Conversion Rate",
x = "Penalty Goals",
y = "Total Season Goals",
size = "Penalties Scored"
)
ggplotly(plot, tooltip = "text")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#034694", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "red", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#EE4B2B", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#E10600", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#ED0800", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "lightblue", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#87ceeb", high = "#3D195B") +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "black", place = "center") +
scale_fill_gradient(low = "#87ceeb", high = "#3D195B") +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#87ceeb", high = "#3D195B") +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradient(low = "#87ceeb", high = "#3D195B") +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
palette_colors <- c("#87ceeb", "#3D195B")
cvi_palettes("palette_colors", type = "continuous", n = 20)
cvi_palettes = function(name, n, all_palettes = cvi_colours, type = c("discrete", "continuous")) {
palette = all_palettes[[name]]
if (missing(n)) {
n = length(palette)
}
type = match.arg(type)
out = switch(type,
continuous = grDevices::colorRampPalette(palette)(n),
discrete = palette[1:n]
)
structure(out, name = name, class = "palette")
}
palette_colors <- c("#87ceeb", "#3D195B")
cvi_palettes("palette_colors", type = "continuous", n = 20)
cvi_palettes = function(name, n, type = c("discrete", "continuous")) {
palette = all_palettes[[name]]
if (missing(n)) {
n = length(palette)
}
type = match.arg(type)
out = switch(type,
continuous = grDevices::colorRampPalette(palette)(n),
discrete = palette[1:n]
)
structure(out, name = name, class = "palette")
}
palette_colors <- c("#87ceeb", "#3D195B")
cvi_palettes("palette_colors", type = "continuous", n = 20)
cvi_colours <- list(palette_colors <- c("#87ceeb", "#3D195B"))
cvi_palettes = function(name, n, all_palettes = cvi_colours, type = c("discrete", "continuous")) {
palette = all_palettes[[name]]
if (missing(n)) {
n = length(palette)
}
type = match.arg(type)
out = switch(type,
continuous = grDevices::colorRampPalette(palette)(n),
discrete = palette[1:n]
)
structure(out, name = name, class = "palette")
}
cvi_palettes("palette_colors", type = "continuous", n = 20)
palette_func <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette_func(20)
palette <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette(20)
palette <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette(20)
rm(cvi_palettes())
palette <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette(20)
rm(cvi_palettes)
palette <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette(20)
rm(palette_func())
palette <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette(20)
rm(palette_func)
palette <- colorRampPalette(c("#87ceeb", "#3D195B"))
continuous_palette <- palette(20)
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette_func(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
outfielders <- soccer_data[soccer_data$Position != "GK", ]
outfielders <- outfielders[outfielders$Goals >= 1, ]
outfielders$Position <- factor(outfielders$Position)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
scale_fill_gradientn(colors = palette(100)) +
xlim(0,3500) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Position(s)") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
outfielders <- soccer_data[soccer_data$Position != "GK", ]
outfielders <- outfielders[outfielders$Goals >= 1, ]
outfielders$Position <- factor(outfielders$Position)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
position_colors <- cvi_palettes("palette_colors", type = "continuous", n = length(unique(outfielders$Position)))
outfielders <- soccer_data[soccer_data$Position != "GK", ]
outfielders <- outfielders[outfielders$Goals >= 1, ]
outfielders$Position <- factor(outfielders$Position)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
position_colors <- cvi_palettes("palette_colors", type = "continuous", n = length(unique(outfielders$Position)))
outfielders <- soccer_data[soccer_data$Position != "GK", ]
outfielders <- outfielders[outfielders$Goals >= 1, ]
outfielders$Position <- factor(outfielders$Position)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
scale_fill_gradientn(colors = palette(100)) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Position(s)") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
outfielders <- soccer_data[soccer_data$Position != "GK" & soccer_data$Goals >= 1, ]
outfielders$Primary_Position <- sub(",.*", "", outfielders$Position)
valid_positions <- c("DF", "MF", "FW")
outfielders <- outfielders[outfielders$Primary_Position %in% valid_positions, ]
outfielders$Primary_Position <- factor(outfielders$Primary_Position, levels = valid_positions)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Primary_Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Position(s)") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
outfielders <- soccer_data[soccer_data$Position != "GK" & soccer_data$Goals >= 1, ]
outfielders$Primary_Position <- sub(",.*", "", outfielders$Position)
valid_positions <- c("DF", "MF", "FW")
outfielders <- outfielders[outfielders$Primary_Position %in% valid_positions, ]
outfielders$Primary_Position <- factor(outfielders$Primary_Position, levels = valid_positions)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Primary_Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Primary Position") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
outfielders <- soccer_data[soccer_data$Position != "GK" & soccer_data$Goals >= 1, ]
outfielders$Primary_Position <- sub(",.*", "", outfielders$Position)
valid_positions <- c("DF", "MF", "FW")
outfielders <- outfielders[outfielders$Primary_Position %in% valid_positions, ]
outfielders$Primary_Position <- factor(outfielders$Primary_Position, levels = valid_positions)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Primary_Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Primary_Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Primary Position") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
outfielders <- soccer_data[soccer_data$Goals >= 1, ]
outfielders$Primary_Position <- sub(",.*", "", outfielders$Position)
valid_positions <- c("GK", "DF", "MF", "FW")
outfielders <- outfielders[outfielders$Primary_Position %in% valid_positions, ]
outfielders$Primary_Position <- factor(outfielders$Primary_Position, levels = valid_positions)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Primary_Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Primary_Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Primary Position") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
palette <- colorRampPalette(c("#Ffd700", "#3D195B"))
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "black", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
palette <- colorRampPalette(c("#04f5ff", "#3D195B"))
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
outfielders <- soccer_data[soccer_data$Goals >= 1, ]
outfielders$Primary_Position <- sub(",.*", "", outfielders$Position)
valid_positions <- c("GK", "DF", "MF", "FW")
outfielders <- outfielders[outfielders$Primary_Position %in% valid_positions, ]
outfielders$Primary_Position <- factor(outfielders$Primary_Position, levels = valid_positions)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Primary_Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Primary_Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Primary Position") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
teams <- list(
ManCity = soccer_data[soccer_data$Club == "Manchester City", ],
ManU = soccer_data[soccer_data$Club == "Manchester United", ],
Liverpool = soccer_data[soccer_data$Club == "Liverpool FC", ],
Chelsea = soccer_data[soccer_data$Club == "Chelsea", ],
Leicester = soccer_data[soccer_data$Club == "Leicester City", ],
WestHam = soccer_data[soccer_data$Club == "West Ham United", ],
Tottenham = soccer_data[soccer_data$Club == "Tottenham Hotspur", ],
Arsenal = soccer_data[soccer_data$Club == "Arsenal", ],
Leeds = soccer_data[soccer_data$Club == "Leeds United", ],
Everton = soccer_data[soccer_data$Club == "Everton", ],
AstonVilla = soccer_data[soccer_data$Club == "Aston Villa", ],
Newcastle = soccer_data[soccer_data$Club == "Newcastle United", ],
Wolves = soccer_data[soccer_data$Club == "Wolverhampton Wanderers", ],
CrystalPalace = soccer_data[soccer_data$Club == "Crystal Palace", ],
Southampton = soccer_data[soccer_data$Club == "Southampton", ],
Brighton = soccer_data[soccer_data$Club == "Brighton", ],
Burnley = soccer_data[soccer_data$Club == "Burnley", ],
Fulham = soccer_data[soccer_data$Club == "Fulham", ],
WestBrom = soccer_data[soccer_data$Club == "West Bromwich Albion", ],
Sheffield = soccer_data[soccer_data$Club == "Sheffield United", ]
)
knitr::opts_chunk$set(echo = FALSE)
library(ggplot2)
library(plotly)
library(treemapify)
library(gganimate)
library(gifski)
library(viridis)
library(transformr)
library(readr)
soccer_data <- read.csv("EPL_20_21.csv")
teams <- list(
ManCity = soccer_data[soccer_data$Club == "Manchester City", ],
ManU = soccer_data[soccer_data$Club == "Manchester United", ],
Liverpool = soccer_data[soccer_data$Club == "Liverpool FC", ],
Chelsea = soccer_data[soccer_data$Club == "Chelsea", ],
Leicester = soccer_data[soccer_data$Club == "Leicester City", ],
WestHam = soccer_data[soccer_data$Club == "West Ham United", ],
Tottenham = soccer_data[soccer_data$Club == "Tottenham Hotspur", ],
Arsenal = soccer_data[soccer_data$Club == "Arsenal", ],
Leeds = soccer_data[soccer_data$Club == "Leeds United", ],
Everton = soccer_data[soccer_data$Club == "Everton", ],
AstonVilla = soccer_data[soccer_data$Club == "Aston Villa", ],
Newcastle = soccer_data[soccer_data$Club == "Newcastle United", ],
Wolves = soccer_data[soccer_data$Club == "Wolverhampton Wanderers", ],
CrystalPalace = soccer_data[soccer_data$Club == "Crystal Palace", ],
Southampton = soccer_data[soccer_data$Club == "Southampton", ],
Brighton = soccer_data[soccer_data$Club == "Brighton", ],
Burnley = soccer_data[soccer_data$Club == "Burnley", ],
Fulham = soccer_data[soccer_data$Club == "Fulham", ],
WestBrom = soccer_data[soccer_data$Club == "West Bromwich Albion", ],
Sheffield = soccer_data[soccer_data$Club == "Sheffield United", ]
)
team_colors = c(
"ManCity" = "#6CABDD",
"ManU" = "#DA291C",
"Liverpool" = "#c8102E",
"Chelsea" = "#034694",
"Leicester" = "#003090",
"WestHam" = "#7A263A",
"Tottenham" = "#132257",
"Arsenal" = "#EF0107",
"Leeds" = "#FFCD00",
"Everton" = "#003399",
"AstonVilla" = "#95bfe5",
"Newcastle" = "#241F20",
"Wolves" = "#FDB913",
"CrystalPalace" = "#1B458F",
"Southampton" = "#d71920",
"Brighton" = "#0057B8",
"Burnley" = "#6C1D45",
"Fulham" = "#000000",
"WestBrom" = "#122F67",
"Sheffield" = "#EE2737"
)
palette <- colorRampPalette(c("#00ff85", "#3D195B"))
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
cards_df <- data.frame(YellowCards = sapply(teams, function(team) sum(team$Yellow_Cards)), RedCards = sapply(teams, function(team) sum(team$Red_Cards)),
Names = names(teams))
ggplot(cards_df, aes(area = YellowCards, fill = RedCards, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Yellow and Red Cards Recieved", fill = "Red Cards")
outfielders <- soccer_data[soccer_data$Goals >= 1, ]
outfielders$Primary_Position <- sub(",.*", "", outfielders$Position)
valid_positions <- c("GK", "DF", "MF", "FW")
outfielders <- outfielders[outfielders$Primary_Position %in% valid_positions, ]
outfielders$Primary_Position <- factor(outfielders$Primary_Position, levels = valid_positions)
outfielders$Club <- factor(outfielders$Club, levels = unique(outfielders$Club))
p <- ggplot(outfielders, aes(x = Mins, y = Goals, color = Primary_Position)) +
geom_point(size = 3) +
scale_x_log10() +
transition_states(Club, transition_length = 10, state_length = 20) +
xlim(0,3500) +
scale_color_manual(values = palette(length(unique(outfielders$Primary_Position)))) +
labs(title = "Goals vs. Minutes by Position for {closest_state}",
x = "Minutes Played",
y = "Goals Scored",
color = "Primary Position") +
theme_minimal()
animate(p, nframes = 300, fps = 5)
install.packages("patchwork")
knitr::opts_chunk$set(echo = FALSE)
# Learn more about creating websites with Distill at:
# https://rstudio.github.io/distill/website.html
# Learn more about publishing to GitHub Pages at:
# https://rstudio.github.io/distill/publish_website.html#github-pages
library(patchwork)
goals_df <- data.frame(totalxG = sapply(teams, function(team) sum(team$xG*team$Matches)), Goals = sapply(teams, function(team) sum(team$Goals)),Names = names(teams))
ggplot(goals_df, aes(x = totalxG, y = Goals)) +
geom_text(aes(label = Names), size = 3, color = team_colors) +
xlab("Total xG") +
ylab("Goals Scored") +
xlim(42,95) +
ggtitle("Scatterplot of Total xG vs Goals Scored by Club") +
theme_minimal()
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
goals_df <- data.frame(totalxG = sapply(teams, function(team) sum(team$xG*team$Matches)), Goals = sapply(teams, function(team) sum(team$Goals)),Names = names(teams))
goals_plot <- ggplot(goals_df, aes(x = totalxG, y = Goals)) +
geom_text(aes(label = Names), size = 3, color = team_colors) +
xlab("Total xG") +
ylab("Goals Scored") +
xlim(42,95) +
ggtitle("Scatterplot of Total xG vs Goals Scored by Club") +
theme_minimal()
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
assists_plot <- ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
infographic <- goals_plot / assists_plot +
plot_annotation(title = "Premier League 20/21 Infographic")
print(infographic)
library(patchwork)
library(ggplot2)
palette <- colorRampPalette(c("#00ff85", "#3D195B"))
goals_df <- data.frame(totalxG = sapply(teams, function(team) sum(team$xG*team$Matches)), Goals = sapply(teams, function(team) sum(team$Goals)),Names = names(teams))
goals_plot <- ggplot(goals_df, aes(x = totalxG, y = Goals)) +
geom_text(aes(label = Names), size = 3, color = team_colors) +
xlab("Total xG") +
ylab("Goals Scored") +
xlim(42,95) +
ggtitle("Scatterplot of Total xG vs Goals Scored by Club") +
theme_minimal()
assists_df <- data.frame(totalxA = sapply(teams, function(team) sum(team$xA*team$Matches)), Assists = sapply(teams, function(team) sum(team$Assists)), Passes = sapply(teams, function(team) sum(team$Passes_Attempted)), Names = names(teams))
assists_plot <- ggplot(assists_df, aes(area = Assists, fill = totalxA, label = Names)) +
geom_treemap() +
geom_treemap_text(color = "white", place = "center") +
scale_fill_gradientn(colors = palette(100)) +
labs(title = "Treemap of Club by Total xA and Assists", fill = "Total xA")
infographic <- goals_plot | assists_plot +
plot_annotation(title = "Premier League 20/21 Infographic")
print(infographic)
create_theme("background")
library(distill)
create_theme("background")
